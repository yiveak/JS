/*
 * 函数返回时必须跳回到调用它的位置，所以计算机必须记住调用发生的上下文。
 * 计算机存储此上下文的位置是调用栈。每次调用函数时，当前上下文都存储在此栈的顶部。
 * 当函数返回时，它会从栈中删除顶层上下文并使用此上下文继续执行。
 * 存储此栈需要计算机内存中的空间。当栈变得太大时，计算机将失败并显示“栈空间不足”或“递归过多”等消息。
 */
function chicken() {
  return egg();
}
function egg() {
  return chicken();
}
console.log(chicken(), "先有鸡？还是先有蛋？"); // "吹爆栈"
